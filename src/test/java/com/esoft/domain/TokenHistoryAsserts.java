package com.esoft.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TokenHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTokenHistoryAllPropertiesEquals(TokenHistory expected, TokenHistory actual) {
        assertTokenHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertTokenHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTokenHistoryAllUpdatablePropertiesEquals(TokenHistory expected, TokenHistory actual) {
        assertTokenHistoryUpdatableFieldsEquals(expected, actual);
        assertTokenHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTokenHistoryAutoGeneratedPropertiesEquals(TokenHistory expected, TokenHistory actual) {
        assertThat(actual)
            .as("Verify TokenHistory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTokenHistoryUpdatableFieldsEquals(TokenHistory expected, TokenHistory actual) {
        assertThat(actual)
            .as("Verify TokenHistory relevant properties")
            .satisfies(a -> assertThat(a.getHashedToken()).as("check hashedToken").isEqualTo(expected.getHashedToken()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()))
            .satisfies(a -> assertThat(a.getUpdatedDate()).as("check updatedDate").isEqualTo(expected.getUpdatedDate()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTokenHistoryUpdatableRelationshipsEquals(TokenHistory expected, TokenHistory actual) {
        // empty method
    }
}
