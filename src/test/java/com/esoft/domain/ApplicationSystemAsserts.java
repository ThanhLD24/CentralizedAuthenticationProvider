package com.esoft.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ApplicationSystemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApplicationSystemAllPropertiesEquals(ApplicationSystem expected, ApplicationSystem actual) {
        assertApplicationSystemAutoGeneratedPropertiesEquals(expected, actual);
        assertApplicationSystemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApplicationSystemAllUpdatablePropertiesEquals(ApplicationSystem expected, ApplicationSystem actual) {
        assertApplicationSystemUpdatableFieldsEquals(expected, actual);
        assertApplicationSystemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApplicationSystemAutoGeneratedPropertiesEquals(ApplicationSystem expected, ApplicationSystem actual) {
        assertThat(actual)
            .as("Verify ApplicationSystem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApplicationSystemUpdatableFieldsEquals(ApplicationSystem expected, ApplicationSystem actual) {
        assertThat(actual)
            .as("Verify ApplicationSystem relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()))
            .satisfies(a -> assertThat(a.getUpdatedDate()).as("check updatedDate").isEqualTo(expected.getUpdatedDate()))
            .satisfies(a -> assertThat(a.getActive()).as("check active").isEqualTo(expected.getActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApplicationSystemUpdatableRelationshipsEquals(ApplicationSystem expected, ApplicationSystem actual) {
        // empty method
    }
}
